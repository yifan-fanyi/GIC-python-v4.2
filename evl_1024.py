import cv2
import os
import numpy as np
import pickle
from core.util.evaluate import MSE, PSNR
from core.util.ReSample import ReSample
import matplotlib.pyplot as plt

def resize(Y, S):
    while Y.shape[1] < S:
        Y = ReSample.resample(Y, 1/2)
    return Y

def load_imgs(folder, suflex, count=186):
    img, bpp = [], []
    for i in range(count):
        if suflex is not None:
            x = cv2.imread(folder+'/'+str(i)+suflex+'.png')
        else:
            x = cv2.imread(folder+'/'+str(i)+'.png')
        img.append(x)
        if suflex is not None:
            b = os.stat(folder+'/'+str(i)+suflex+'.bpg').st_size*8
            bpp.append(b)
    return np.array(img), np.array(bpp)

def evl_one(gt, folder):
    res = []
    for q in range(1, 52):
        img, bpp = load_imgs(folder, '_'+str(q))
        img = resize(img, gt.shape[1])
        res.append([MSE(gt, img), PSNR(gt, img), np.mean(bpp)/(float)(gt.shape[1])**2])
    return res

def evl_bpg():
    folders = ['/Users/alex/Desktop/proj/bpg_res/bpgtest32/420',
                '/Users/alex/Desktop/proj/bpg_res/bpgtest64/420',
                '/Users/alex/Desktop/proj/bpg_res/bpgtest128/420',
               '/Users/alex/Desktop/proj/bpg_res/bpgtest256/420',
               '/Users/alex/Desktop/proj/bpg_res/bpgtest512/420',
               #'/Users/alex/Desktop/proj/bpgtest1024/420'
               ]
    gt, _ = load_imgs('/Users/alex/Desktop/proj/data/test1024', None)
    print(gt.shape)
    res = []
    for folder in folders:
        res += evl_one(gt, folder)
    res = np.array(res).reshape(-1, 3)
    idx = np.argsort(res[:, 2])
    res = res[idx]
    return res

def psnr_rgb(x):
    return 10*np.log10(255**2/x)

if __name__ == "__main__":
    try:
        with open('evl_bpg_1024.pkl', 'rb') as f:
            res = pickle.load(f)
    except:
        res = evl_bpg()
        with open('evl_bpg_1024.pkl', 'wb') as f:
            pickle.dump(res, f)


    
    plt.figure(figsize=(9,6))
    plt.plot(res[:, 2], res[:, 0], label='BPG-420')
    for i in range(len(res)):
        print(res[i,2],',',res[i,0], end=',')
    a = [1265.094, 0.000037,    1148.331, 0.000154,    945.033, 0.000000,   900.614, 0.000048,    824.458, 0.000254,    774.965, 0.000416,    705.179, 0.000229,    615.247, 0.001084,    601.378, 0.000137,    542.123, 0.001616,    531.193, 0.000259,    497.948, 0.000997,    421.295, 0.003654,    358.735,0.004972,   353.813, 0.000256,    346.837, 0.000811,    322.661, 0.003347,    286.071, 0.006305,    284.683, 0.000226,277.490, 0.001525]
    a = np.array(a).reshape(-1, 2)
    for i in range(1,a.shape[0]):
        a[i, 1] += a[i-1, 1] 
    plt.plot(a[:,1]+0.001221, a[:,0],c='k', label='2022_06_13_00_10_21')

    a = [0.00026162465413411457, 1432.4874989072055,0.00026162465413411457+0.0009081440587197581, 852.5849635148134,0.00026162465413411457+0.0009081440587197581+0.001277677474483367,687.1755665912423,0.00026162465413411457+0.0009081440587197581+0.001277677474483367+0.0036449413930045023, 484.8460349523893,0.00026162465413411457+0.0009081440587197581+0.001277677474483367+0.0036449413930045023+0.00050924, 470.5860349523893]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], a[:, 1], color='r',label='20221201')
    plt.scatter(a[:, 0], a[:, 1], color='k',s=3)
    #plt.scatter(0.00026162465413411457+0.0009081440587197581+0.005, 515.49, label='without G8')
    a = [0.00026190152732274866, 1430.7755198205246,0.00026190152732274866+0.0011047137680874077,848.6380013137735,0.00026190152732274866+0.0011047137680874077+0.0002946443455193632,764.5862328091828,0.00026190152732274866+0.0011047137680874077+0.0002946443455193632+0.0003746299333469842+0.0020620951088525918, 550.5288594701557,0.00026190152732274866+0.0011047137680874077+0.0002946443455193632+0.0003746299333469842+0.0020620951088525918+0.00038536133304719+0.0013475264272382183, 496.30510320901993]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], a[:, 1], color='y',label='20221203 more codewords')# 1201a
    plt.scatter(a[:, 0], a[:, 1], color='k',s=3)
    plt.scatter(0.00026162465413411457+0.0009081440587197581+0.022/16,497.78742515316276+150, label='Multigroup 16x16 and 32x32')


    a = [0.00026190152732274866, 1430.7755198205246,0.00026190152732274866+0.0011047137680874077,848.6380013137735,0.00026190152732274866+0.0011047137680874077+0.0019157522468156711, 487.419669891892+150,0.00026190152732274866+0.0011047137680874077+0.0019157522468156711+0.0006207189252299647, 427.6501612111321+150,0.00026190152732274866+0.0011047137680874077+0.0019157522468156711+0.0006207189252299647+0.0009362979601788264,388.355414962033+150]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], a[:, 1],label='1201mg_d')
    a = [0.00026190152732274866, 1430.7755198205246,0.00026190152732274866+0.0011047137680874077,848.6380013137735,0.00026190152732274866+0.0011047137680874077+0.0017325749961278772,499.5731883099261+150]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], a[:, 1],label='1201mg_e')









    plt.grid()
    plt.xlabel('BPP')
    plt.ylabel('MSE')
    plt.legend()
    plt.show()


    plt.figure(figsize=(9,6))
    plt.plot(res[:, 2], psnr_rgb(res[:, 0]), label='BPG-420')
    a = [1265.094, 0.000037,    1148.331, 0.000154,    945.033, 0.000000,   900.614, 0.000048,    824.458, 0.000254,    774.965, 0.000416,    705.179, 0.000229,    615.247, 0.001084,    601.378, 0.000137,    542.123, 0.001616,    531.193, 0.000259,    497.948, 0.000997,    421.295, 0.003654,    358.735,0.004972,   353.813, 0.000256,    346.837, 0.000811,    322.661, 0.003347,    286.071, 0.006305,    284.683, 0.000226,277.490, 0.001525]
    a = np.array(a).reshape(-1, 2)
    for i in range(1,a.shape[0]):
        a[i, 1] += a[i-1, 1] 
    plt.plot(a[:,1]+0.001221, psnr_rgb(a[:,0]),c='k', label='2022_06_13_00_10_21')


    plt.scatter(0.00026162465413411457+0.0009081440587197581+0.022/16, psnr_rgb(497.78742515316276+150), label='Multigroup 16x16 and 32x32')
    a = [0.00026162465413411457, 1432.4874989072055,0.00026162465413411457+0.0009081440587197581, 852.5849635148134,0.00026162465413411457+0.0009081440587197581+0.001277677474483367,687.1755665912423,0.00026162465413411457+0.0009081440587197581+0.001277677474483367+0.0036449413930045023, 484.8460349523893,0.00026162465413411457+0.0009081440587197581+0.001277677474483367+0.0036449413930045023+0.00050924, 470.5860349523893]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], psnr_rgb(a[:, 1]), color='r',label='20221201')
    plt.scatter(a[:, 0], psnr_rgb(a[:, 1]), color='k',s=3)
    #plt.scatter(0.00026162465413411457+0.0009081440587197581+0.005, 515.49, label='without G8')
    a = [0.00026190152732274866, 1430.7755198205246,0.00026190152732274866+0.0011047137680874077,848.6380013137735,0.00026190152732274866+0.0011047137680874077+0.0002946443455193632,764.5862328091828,0.00026190152732274866+0.0011047137680874077+0.0002946443455193632+0.0003746299333469842+0.0020620951088525918, 550.5288594701557,0.00026190152732274866+0.0011047137680874077+0.0002946443455193632+0.0003746299333469842+0.0020620951088525918+0.00038536133304719+0.0013475264272382183, 496.30510320901993]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], psnr_rgb(a[:, 1]), color='r',label='20221203 more codewords')


    a = [0.00026190152732274866, 1430.7755198205246,0.00026190152732274866+0.0011047137680874077,848.6380013137735,0.00026190152732274866+0.0011047137680874077+0.0019157522468156711, 487.419669891892+150,0.00026190152732274866+0.0011047137680874077+0.0019157522468156711+0.0006207189252299647, 427.6501612111321+150,0.00026190152732274866+0.0011047137680874077+0.0019157522468156711+0.0006207189252299647+0.0009362979601788264,388.355414962033 +150]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], psnr_rgb(a[:, 1]),label='1201mg_d')

    a = [0.00026190152732274866, 1430.7755198205246,0.00026190152732274866+0.0011047137680874077,848.6380013137735,0.00026190152732274866+0.0011047137680874077+0.0017325749961278772,499.5731883099261+150]
    a = np.array(a).reshape(-1,2)
    plt.scatter(a[:, 0], psnr_rgb(a[:, 1]),label='1201mg_e')





    plt.scatter(a[:, 0], psnr_rgb(a[:, 1]), color='k',s=3)
    plt.grid()
    plt.xlabel('BPP')
    plt.ylabel('PSNR')
    plt.legend()
    plt.show()